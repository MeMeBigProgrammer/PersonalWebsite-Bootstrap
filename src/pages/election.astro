---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---

<!doctype html>
<html lang="en" class="">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<h1>Hello There</h1>
		<div id="container" class="container"></div>
		<script src="https://unpkg.com/topojson-client@3"></script>
		<script>
			import * as d3 from "https://cdn.jsdelivr.net/npm/d3@7/+esm";
			import * as topojson from "topojson-client";

			fetch("./tile2.json")
				.then((response) => response.json())
				.then((us) => {
					const width = window.innerWidth;
					const height = window.innerHeight;

					const zoom = d3.zoom().scaleExtent([2, 8]).on("zoom", zoomed);

					const svg = d3
						.create("svg")
						.attr("viewBox", [0, 0, width, height])
						.attr("width", width)
						.attr("height", height)
						.attr("style", "max-width: 100%; height: auto;")
						.on("click", reset);

					const path = d3.geoPath();

					const g = svg.append("g");
                    console.log(us);

					const states = g
						.append("g")
						.attr("fill", "#111")
						.attr("cursor", "pointer")
						.selectAll("path")
						.data(topojson.feature(us, us.objects.states).features)
						.join("path")
						.attr("d", path)
						.on("click", clicked);

					container.append(svg.node());
					// svg.call(zoom.transform, d3.zoomIdentity.scale(50));

					function reset() {
						states.transition().style("fill", null);
						svg
							.transition()
							.duration(750)
							.call(
								zoom.transform,
								d3.zoomIdentity,
								d3.zoomTransform(svg.node()).invert([width / 2, height / 2]),
							);
					}

					function clicked(event, d) {
						const [[x0, y0], [x1, y1]] = path.bounds(d);
						event.stopPropagation();
						states.transition().style("fill", null);
						d3.select(this).transition().style("fill", "red");
						svg
							.transition()
							.duration(750)
							.call(
								zoom.transform,
								d3.zoomIdentity
									.translate(width / 2, height / 2)
									.scale(
										Math.min(
											3,
											0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height),
										),
									)
									.translate(-(x0 + x1) / 2, -(y0 + y1) / 2),
								d3.pointer(event, svg.node()),
							);
					}

					function zoomed(event) {
						const { transform } = event;
						g.attr("transform", transform);
						g.attr("stroke-width", 1 / transform.k);
					}
				});
		</script>
	</body>
</html>
