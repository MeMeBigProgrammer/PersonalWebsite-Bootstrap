---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { Icon } from "astro-icon";
import "@fontsource-variable/playfair-display";
import "@fontsource-variable/roboto-mono";
import "@fontsource-variable/manrope"
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

const links = [
	{
		label: "Github",
		link: "https://github.com/sbaumohl",
		icon: "github",
	},
	{
		label: "Email",
		icon: "mail",
		link: "mailto:mail@sambaumohl.me",
	},
	// {
	// 	label: "Instagram",
	// 	link: "https://www.instagram.com/sam_b2327/",
	// 	icon: "instagram",
	// },
	{
		label: "LinkedIn",
		icon: "linkedin",
		link: "https://www.linkedin.com/in/sam-baumohl09/",
	},
	// {
	// 	label: "PGP",
	// 	icon: "key",
	// 	link: "",
	// },
];

const skills = new Map([
	["Frameworks", ["Angular", "React.js", "Astro", "NodeJS"]],
	["Languages", ["Java", "Python", "Javascript", "Typescript", "HTML", "CSS"]],
	["Other Tools", ["AWS", "Docker", "Git", "Linux", "PostgreSQL", "SQL"]],
]);
const introUnderlineStyle =
	"underline underline-offset-8 md:decoration-4 decoration-accent";

const projects = [
	{
		title: "MyMICDS.net",
		description:
			"An all-in-one platform for MICDS student life built with Angular, Express, MongoDB, and NodeJS.",
		github: "https://github.com/MyMICDS/",
		link: "https://mymicds.net/",
	},
	{
		title: "BYO Style-Based GAN",
		description:
			"A blackbox implementation of NVIDIA's StyleGAN (Style-Based Generative Adversarial Neural Network) using PyTorch and Python.",
		github: "https://github.com/sbaumohl/BYO-GAN",
	},
	{
		title: "This Websiteâ„¢",
		description:
			"Built with Astro, Typescript, and Tailwindcss, and populated using my own images.",
	},
];
---

<!doctype html>
<html lang="en" class="min-h-full h-100 subpixel-antialiased">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="font-thin font-mono bg-black md:px-20 px-4 md:pt-4">
		<div class="hero-header text-2xl overflow-hidden flex flex-col">
			<h1 class="absolute inset-y-1/2 md:inset-x-1/4 inset-x-4 text-white font-sans select-none md:text-9xl text-7xl text-center p-auto font-bold">
				Sam Baumohl
			</h1>

			<div class="h-screen max-h-screen break-words">
				<p
					id="hero-text"
					class="font-mono text-gray-200 select-none tracking-tighter"
				>
				</p>
			</div>
		</div>
		<div class="my-8 text-white">
			<p class="text-lg mt-4">
				Saint Louis, Missouri born and raised, I study <span
					class={introUnderlineStyle}>Computer Sciences</span
				> and <span class={introUnderlineStyle}>Legal Studies</span> at the <span
					class={introUnderlineStyle}>University of Wisconsin-Madison</span
				>. I'm passionate about Software Development, Machine Learning, and
				Technology Policy.
			</p>
		</div>
		<div class="my-5 text-center transparent">
			<h1 class="text-7xl">My Skills</h1>
			<div
				class="flex md:flex-row flex-col md:gap-40 gap-4 sm:py-24 py-6 sm:px-20 px-4 text-2xl"
			>
				{
					Array.from(skills.entries()).map(([key, value]) => (
						<div class="grow rounded-lg bg-primary mx-20 p-4 hover:scale-125 hover:shadow-2xl ease-in-out duration-150">
							<h2 class="text-4xl mb-3">{key}</h2>
							<ul>
								{value.map((d) => (
									<li>{d}</li>
								))}
							</ul>
						</div>
					))
				}
			</div>
		</div>
		<style>
			.transparent {
				background-color: rgba(170, 170, 170, 0.22);
			}

			.animation-fade {
				animation-name: fadein;
				animation-duration: 1.5s;
			}

			@keyframes fadein {
				from {
					transform: translateY(-150%);
					opacity: 20%;
				}

				to {
					offset-position: 0cm 0cm;
					opacity: 100%;
				}
			}
		</style>
		<script>
			function refreshNumbers() {
				let c = Array.from({ length: 5000 }, (_, e) =>
					Math.random() >= 0.5 ? 1 : 0,
				).join("");
				document.getElementById("hero-text").innerHTML = c;
				console.log(
					document.getElementById("hero-text").getBoundingClientRect(),
				);
				setTimeout(refreshNumbers, 350);
			}

			refreshNumbers();
		</script>
	</body>
</html>
