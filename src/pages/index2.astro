---
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { Icon } from "astro-icon";
import "@fontsource-variable/playfair-display";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

const links = [
	{
		label: "Github",
		link: "https://github.com/sbaumohl",
		icon: "github",
	},
	{
		label: "Email",
		icon: "mail",
		link: "mailto:mail@sambaumohl.me",
	},
	// {
	// 	label: "Instagram",
	// 	link: "https://www.instagram.com/sam_b2327/",
	// 	icon: "instagram",
	// },
	{
		label: "LinkedIn",
		icon: "linkedin",
		link: "https://www.linkedin.com/in/sam-baumohl09/",
	},
	// {
	// 	label: "PGP",
	// 	icon: "key",
	// 	link: "",
	// },
];

const skills = new Map([
	["Frameworks", ["Angular", "React.js", "Astro", "NodeJS"]],
	["Languages", ["Java", "Python", "Javascript", "Typescript", "HTML", "CSS"]],
	["Other Tools", ["AWS", "Docker", "Git", "Linux", "PostgreSQL", "SQL"]],
]);
const introUnderlineStyle =
	"underline underline-offset-8 md:decoration-4 decoration-accent";

const projects = [
	{
		title: "MyMICDS.net",
		description:
			"An all-in-one platform for MICDS student life built with Angular, Express, MongoDB, and NodeJS.",
		github: "https://github.com/MyMICDS/",
		link: "https://mymicds.net/",
	},
	{
		title: "BYO Style-Based GAN",
		description:
			"A blackbox implementation of NVIDIA's StyleGAN (Style-Based Generative Adversarial Neural Network) using PyTorch and Python.",
		github: "https://github.com/sbaumohl/BYO-GAN",
	},
    {
        title: "This Websiteâ„¢",
        description: "Built with Astro, Typescript, and Tailwindcss, and populated using my own images."
    }
];
---

<!doctype html>
<html lang="en" class="min-h-full h-100">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body class="font-thin font-sans p-8">
		<div class="h-screen bg-fixed bg-zona bg-cover rounded-lg">
			<Header />
			<div class="h-screen flex flex-row justify-center select-none">
				<h1
					class="sm:text-9xl text-7xl font-semibold text-black self-center mix-blend-overlay hover:mix-blend-difference"
					id="name"
				>
					Sam Baumohl
				</h1>
			</div>
			<div class="flex">
				{
					links.map((val) => (
						<a
							class="first:ml-20 border-l-0 first:border-l p-2 border-t border-x border-black hover:underline"
							target="_blank"
							rel="noopener noreferrer"
							href={val.link}
						>
							<Icon name={val.icon} class="w-5 mr-1 float-left" />
							{val.label}
						</a>
					))
				}
			</div>
		</div>
		<div class="my-5 text-center transparent">
			<h1 class="text-7xl">My Skills</h1>
			<div
				class="flex md:flex-row flex-col md:gap-40 gap-4 sm:py-24 py-6 sm:px-20 px-4 text-2xl"
			>
				{
					Array.from(skills.entries()).map(([key, value]) => (
						<div class="grow">
							<h2 class="text-4xl mb-3">{key}</h2>
							<ul>
								{value.map((d) => (
									<li>{d}</li>
								))}
							</ul>
						</div>
					))
				}
			</div>
		</div>

        <div class="p-5 bg-foss bg-fixed bg-cover rounded-md h-screen text-white mix-blend-difference">
			<h1 class="text-7xl text-center">My Projects</h1>
			<div class="flex md:flex-row flex-col lg:gap-15 gap-4 sm:py-24 py-6 sm:px-48 px-4">
				{
					projects.map((val) => (
						<div class="grow flex-1 basis-0 p-4">
							<h2 class="text-4xl mb-3">{val.title}</h2>
							<p class="text-left mb-3">{val.description}</p>
							<div class="flex flex-row">
								<a
									href={val.github}
									target="_blank"
									rel="noopener noreferrer"
									class="hover:underline mr-2"
								>
									<Icon name="github" class="w-5 mr-1 float-left" />
									Code
								</a>
								{val.link && (
									<>{" | "}</>
									<a
										id="myLink"
										href={val.link}
										target="_blank"
										class="underline ml-2"
									>
										Visit
									</a>
								)}
							</div>
						</div>
					))
				}
			</div>
		</div>
		<style>
			.transparent {
				background-color: rgba(170, 170, 170, 0.22);
			}
		</style>
	</body>
</html>
